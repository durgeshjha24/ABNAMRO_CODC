# This workflow is activated upon any push event occurring in the 'dev' branch
# It configures and installs all the required Python dependencies
# It conducts a thorough examination of Python code to identify syntax errors and undefined variables
# Following that, it performs unit testing
# It then executes the code
# The results are published as an artifact in the 'dev' branch, containing the newly generated code output
# Eventually, the code is deployed to the 'main' branch


name: CICD

on:
  push:
    branches: [ "dev" ]
  

permissions: write-all

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.8
      uses: actions/setup-python@v3
      with:
        python-version: "3.8"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        pip install -r requirements.txt
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with chipsa
      run: |
        export PYTHONPATH=src
        python src/kommatipara_dataset_test.py --client_file "data/dataset_one.csv" --financial_file "data/dataset_two.csv" "Netherland" "United kingdom"
    - name: execute data processing code
      run: |
        export PYTHONPATH=src
        python src/kommatipara_dataset.py --client_file "data/dataset_one.csv" --financial_file "data/dataset_two.csv" "Netherland" "United kingdom"
    - name: create wheel package
      run: |
        export PYTHONPATH=src
        python setup.py bdist_wheel
    - name: Publish artifacts to dev
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: Changed files from latest run
    - name: checkout main branch
      uses: actions/checkout@master
    - name: Deploy to main branch
      uses: devmasx/merge-branch@v1.3.1
      with:
        type: now
        from_branch: dev
        target_branch: main
        github_token: ${{ secrets.GITHUB_TOKEN }}
